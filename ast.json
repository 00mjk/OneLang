{
    "unknown_token_exception::constructor": {
        "statements": [
            {
                "type": "Expression",
                "expression": {
                    "type": "Call",
                    "method": {
                        "type": "Identifier",
                        "text": "super"
                    },
                    "arguments": [
                        null
                    ]
                }
            }
        ]
    },
    "token::constructor": {
        "statements": []
    },
    "tokenizer::constructor": {
        "statements": []
    },
    "tokenizer::get_type": {
        "statements": [
            {
                "type": "If",
                "condition": {
                    "type": "Binary",
                    "left": {
                        "type": "PropertyAccess",
                        "object": {
                            "type": "Identifier",
                            "text": "this"
                        },
                        "propertyName": {
                            "type": "Identifier",
                            "text": "offset"
                        }
                    },
                    "right": {
                        "type": "PropertyAccess",
                        "object": {
                            "type": "PropertyAccess",
                            "object": {
                                "type": "Identifier",
                                "text": "this"
                            },
                            "propertyName": {
                                "type": "Identifier",
                                "text": "text"
                            }
                        },
                        "propertyName": {
                            "type": "Identifier",
                            "text": "length"
                        }
                    },
                    "operator": ">="
                },
                "then": {
                    "statements": [
                        {
                            "type": "Return",
                            "expression": {
                                "type": "PropertyAccess",
                                "object": {
                                    "type": "Identifier",
                                    "text": "TokenType"
                                },
                                "propertyName": {
                                    "type": "Identifier",
                                    "text": "EndToken"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "type": "Variable"
            },
            {
                "type": "Return",
                "expression": {
                    "type": "Conditional",
                    "condition": {
                        "type": "Binary",
                        "left": {
                            "type": "Binary",
                            "left": {
                                "type": "Binary",
                                "left": {
                                    "type": "Binary",
                                    "left": {
                                        "type": "Identifier",
                                        "text": "c"
                                    },
                                    "right": {
                                        "type": "StringLiteral",
                                        "value": " "
                                    },
                                    "operator": "=="
                                },
                                "right": {
                                    "type": "Binary",
                                    "left": {
                                        "type": "Identifier",
                                        "text": "c"
                                    },
                                    "right": {
                                        "type": "StringLiteral",
                                        "value": "\n"
                                    },
                                    "operator": "=="
                                },
                                "operator": "||"
                            },
                            "right": {
                                "type": "Binary",
                                "left": {
                                    "type": "Identifier",
                                    "text": "c"
                                },
                                "right": {
                                    "type": "StringLiteral",
                                    "value": "\t"
                                },
                                "operator": "=="
                            },
                            "operator": "||"
                        },
                        "right": {
                            "type": "Binary",
                            "left": {
                                "type": "Identifier",
                                "text": "c"
                            },
                            "right": {
                                "type": "StringLiteral",
                                "value": "\r"
                            },
                            "operator": "=="
                        },
                        "operator": "||"
                    },
                    "whenTrue": {
                        "type": "PropertyAccess",
                        "object": {
                            "type": "Identifier",
                            "text": "TokenType"
                        },
                        "propertyName": {
                            "type": "Identifier",
                            "text": "Whitespace"
                        }
                    },
                    "whenFalse": {
                        "type": "Conditional",
                        "condition": {
                            "type": "Binary",
                            "left": {
                                "type": "Binary",
                                "left": {
                                    "type": "Binary",
                                    "left": {
                                        "type": "Parenthesized",
                                        "expression": {
                                            "type": "Binary",
                                            "left": {
                                                "type": "Binary",
                                                "left": {
                                                    "type": "StringLiteral",
                                                    "value": "A"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "text": "c"
                                                },
                                                "operator": "<="
                                            },
                                            "right": {
                                                "type": "Binary",
                                                "left": {
                                                    "type": "Identifier",
                                                    "text": "c"
                                                },
                                                "right": {
                                                    "type": "StringLiteral",
                                                    "value": "Z"
                                                },
                                                "operator": "<="
                                            },
                                            "operator": "&&"
                                        }
                                    },
                                    "right": {
                                        "type": "Parenthesized",
                                        "expression": {
                                            "type": "Binary",
                                            "left": {
                                                "type": "Binary",
                                                "left": {
                                                    "type": "StringLiteral",
                                                    "value": "a"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "text": "c"
                                                },
                                                "operator": "<="
                                            },
                                            "right": {
                                                "type": "Binary",
                                                "left": {
                                                    "type": "Identifier",
                                                    "text": "c"
                                                },
                                                "right": {
                                                    "type": "StringLiteral",
                                                    "value": "z"
                                                },
                                                "operator": "<="
                                            },
                                            "operator": "&&"
                                        }
                                    },
                                    "operator": "||"
                                },
                                "right": {
                                    "type": "Parenthesized",
                                    "expression": {
                                        "type": "Binary",
                                        "left": {
                                            "type": "Binary",
                                            "left": {
                                                "type": "StringLiteral",
                                                "value": "0"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "text": "c"
                                            },
                                            "operator": "<="
                                        },
                                        "right": {
                                            "type": "Binary",
                                            "left": {
                                                "type": "Identifier",
                                                "text": "c"
                                            },
                                            "right": {
                                                "type": "StringLiteral",
                                                "value": "9"
                                            },
                                            "operator": "<="
                                        },
                                        "operator": "&&"
                                    }
                                },
                                "operator": "||"
                            },
                            "right": {
                                "type": "Binary",
                                "left": {
                                    "type": "Identifier",
                                    "text": "c"
                                },
                                "right": {
                                    "type": "StringLiteral",
                                    "value": "_"
                                },
                                "operator": "=="
                            },
                            "operator": "||"
                        },
                        "whenTrue": {
                            "type": "PropertyAccess",
                            "object": {
                                "type": "Identifier",
                                "text": "TokenType"
                            },
                            "propertyName": {
                                "type": "Identifier",
                                "text": "Identifier"
                            }
                        },
                        "whenFalse": {
                            "type": "PropertyAccess",
                            "object": {
                                "type": "Identifier",
                                "text": "TokenType"
                            },
                            "propertyName": {
                                "type": "Identifier",
                                "text": "Operator"
                            }
                        }
                    }
                }
            }
        ]
    },
    "tokenizer::tokenize": {
        "statements": [
            {
                "type": "Variable"
            },
            {
                "type": "While",
                "condition": {
                    "type": "Binary",
                    "left": {
                        "type": "PropertyAccess",
                        "object": {
                            "type": "Identifier",
                            "text": "this"
                        },
                        "propertyName": {
                            "type": "Identifier",
                            "text": "offset"
                        }
                    },
                    "right": {
                        "type": "PropertyAccess",
                        "object": {
                            "type": "PropertyAccess",
                            "object": {
                                "type": "Identifier",
                                "text": "this"
                            },
                            "propertyName": {
                                "type": "Identifier",
                                "text": "text"
                            }
                        },
                        "propertyName": {
                            "type": "Identifier",
                            "text": "length"
                        }
                    },
                    "operator": "<"
                },
                "body": {
                    "statements": [
                        {
                            "type": "Variable"
                        },
                        {
                            "type": "If",
                            "condition": {
                                "type": "Binary",
                                "left": {
                                    "type": "Identifier",
                                    "text": "charType"
                                },
                                "right": {
                                    "type": "PropertyAccess",
                                    "object": {
                                        "type": "Identifier",
                                        "text": "TokenType"
                                    },
                                    "propertyName": {
                                        "type": "Identifier",
                                        "text": "Whitespace"
                                    }
                                },
                                "operator": "=="
                            },
                            "then": {
                                "statements": [
                                    {
                                        "type": "While",
                                        "condition": {
                                            "type": "Binary",
                                            "left": {
                                                "type": "Call",
                                                "method": {
                                                    "type": "PropertyAccess",
                                                    "object": {
                                                        "type": "Identifier",
                                                        "text": "this"
                                                    },
                                                    "propertyName": {
                                                        "type": "Identifier",
                                                        "text": "getType"
                                                    }
                                                },
                                                "arguments": []
                                            },
                                            "right": {
                                                "type": "PropertyAccess",
                                                "object": {
                                                    "type": "Identifier",
                                                    "text": "TokenType"
                                                },
                                                "propertyName": {
                                                    "type": "Identifier",
                                                    "text": "Whitespace"
                                                }
                                            },
                                            "operator": "=="
                                        },
                                        "body": {
                                            "statements": [
                                                {
                                                    "type": "Expression",
                                                    "expression": {
                                                        "type": "PostfixUnary",
                                                        "operator": "++",
                                                        "operand": {
                                                            "type": "PropertyAccess",
                                                            "object": {
                                                                "type": "Identifier",
                                                                "text": "this"
                                                            },
                                                            "propertyName": {
                                                                "type": "Identifier",
                                                                "text": "offset"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "else": {
                                "statements": [
                                    {
                                        "type": "If",
                                        "condition": {
                                            "type": "Binary",
                                            "left": {
                                                "type": "Identifier",
                                                "text": "charType"
                                            },
                                            "right": {
                                                "type": "PropertyAccess",
                                                "object": {
                                                    "type": "Identifier",
                                                    "text": "TokenType"
                                                },
                                                "propertyName": {
                                                    "type": "Identifier",
                                                    "text": "Identifier"
                                                }
                                            },
                                            "operator": "=="
                                        },
                                        "then": {
                                            "statements": [
                                                {
                                                    "type": "Variable"
                                                },
                                                {
                                                    "type": "While",
                                                    "condition": {
                                                        "type": "Binary",
                                                        "left": {
                                                            "type": "Call",
                                                            "method": {
                                                                "type": "PropertyAccess",
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "text": "this"
                                                                },
                                                                "propertyName": {
                                                                    "type": "Identifier",
                                                                    "text": "getType"
                                                                }
                                                            },
                                                            "arguments": []
                                                        },
                                                        "right": {
                                                            "type": "PropertyAccess",
                                                            "object": {
                                                                "type": "Identifier",
                                                                "text": "TokenType"
                                                            },
                                                            "propertyName": {
                                                                "type": "Identifier",
                                                                "text": "Identifier"
                                                            }
                                                        },
                                                        "operator": "=="
                                                    },
                                                    "body": {
                                                        "statements": [
                                                            {
                                                                "type": "Expression",
                                                                "expression": {
                                                                    "type": "PostfixUnary",
                                                                    "operator": "++",
                                                                    "operand": {
                                                                        "type": "PropertyAccess",
                                                                        "object": {
                                                                            "type": "Identifier",
                                                                            "text": "this"
                                                                        },
                                                                        "propertyName": {
                                                                            "type": "Identifier",
                                                                            "text": "offset"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "Variable"
                                                },
                                                {
                                                    "type": "Expression",
                                                    "expression": {
                                                        "type": "Call",
                                                        "method": {
                                                            "type": "PropertyAccess",
                                                            "object": {
                                                                "type": "Identifier",
                                                                "text": "result"
                                                            },
                                                            "propertyName": {
                                                                "type": "Identifier",
                                                                "text": "push"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "New",
                                                                "class": {
                                                                    "type": "Identifier",
                                                                    "text": "Token"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "text": "identifier"
                                                                    },
                                                                    null
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "else": {
                                            "statements": [
                                                {
                                                    "type": "Variable"
                                                },
                                                {
                                                    "type": "If",
                                                    "condition": {
                                                        "type": "PrefixUnary",
                                                        "operator": "!",
                                                        "operand": {
                                                            "type": "Identifier",
                                                            "text": "op"
                                                        }
                                                    },
                                                    "then": {
                                                        "statements": [
                                                            {
                                                                "type": "Throw",
                                                                "expression": {
                                                                    "type": "New",
                                                                    "class": {
                                                                        "type": "Identifier",
                                                                        "text": "UnknownTokenException"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "PropertyAccess",
                                                                            "object": {
                                                                                "type": "Identifier",
                                                                                "text": "this"
                                                                            },
                                                                            "propertyName": {
                                                                                "type": "Identifier",
                                                                                "text": "offset"
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "Call",
                                                                            "method": {
                                                                                "type": "PropertyAccess",
                                                                                "object": {
                                                                                    "type": "PropertyAccess",
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "text": "this"
                                                                                    },
                                                                                    "propertyName": {
                                                                                        "type": "Identifier",
                                                                                        "text": "text"
                                                                                    }
                                                                                },
                                                                                "propertyName": {
                                                                                    "type": "Identifier",
                                                                                    "text": "substr"
                                                                                }
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "PropertyAccess",
                                                                                    "object": {
                                                                                        "type": "Identifier",
                                                                                        "text": "this"
                                                                                    },
                                                                                    "propertyName": {
                                                                                        "type": "Identifier",
                                                                                        "text": "offset"
                                                                                    }
                                                                                },
                                                                                null
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "Expression",
                                                    "expression": {
                                                        "type": "Binary",
                                                        "left": {
                                                            "type": "PropertyAccess",
                                                            "object": {
                                                                "type": "Identifier",
                                                                "text": "this"
                                                            },
                                                            "propertyName": {
                                                                "type": "Identifier",
                                                                "text": "offset"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "PropertyAccess",
                                                            "object": {
                                                                "type": "Identifier",
                                                                "text": "op"
                                                            },
                                                            "propertyName": {
                                                                "type": "Identifier",
                                                                "text": "length"
                                                            }
                                                        },
                                                        "operator": "+="
                                                    }
                                                },
                                                {
                                                    "type": "Expression",
                                                    "expression": {
                                                        "type": "Call",
                                                        "method": {
                                                            "type": "PropertyAccess",
                                                            "object": {
                                                                "type": "Identifier",
                                                                "text": "result"
                                                            },
                                                            "propertyName": {
                                                                "type": "Identifier",
                                                                "text": "push"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "New",
                                                                "class": {
                                                                    "type": "Identifier",
                                                                    "text": "Token"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "text": "op"
                                                                    },
                                                                    null
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            },
            {
                "type": "Return",
                "expression": {
                    "type": "Identifier",
                    "text": "result"
                }
            }
        ]
    }
}