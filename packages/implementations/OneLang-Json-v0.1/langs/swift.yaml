implements:
  - interface: { name: One.Json, minver: 0.1, maxver: 0.1 }
    language: swift
    implementation:
      classes:
        OneJson:
          includes: [Foundation]
          methods:
            parse: "try? JSONSerialization.jsonObject(with: {{str}}.data(using: .utf8)!)"
        OneJValue:
          type: Any
          methods:
            isObject: "({{self}} is [String: Any?])"
            isArray: "({{self}} is [Any])"
            isString: "({{self}} is String)"
            isNumber: "({{self}} is Int)"
            isBool: "({{self}} is Bool)"
            isNull: "({{self}} == nil)"
            asString: "({{self}} as! String)"
            asNumber: "({{self}} as! Int)"
            asBool: "({{self}} as! Bool)"
            asObject: "({{self}} as? [String: Any?])"
            getArrayItems: "{{self}}"
        OneJObject:
          type: Any
          methods:
            getProperties: "Array({{self}}!.keys)"
            get: "{{self}}![{{name}}]"
        OneJProperty:
          type: String
          methods:
            getName: "{{self}}"
            getValue: "({{obj}} as! [String: Any?])[{{self}}!]!"