ArrayTest: "len1: 1, len2: 2\n"
HelloWorldRaw: "Hello world!\n"
BooleanTest: "a: true, b: false, c: false, d: true\n"
CharacterTest: "lower\nnumber\nupper\n"
ExceptionTest: "5\nException: exception message\n"
ExplicitGenericTypeTest: "y\nx\n"
ExplicitTypeTest: "1\n"
HelloWorld: "Hello world! value = 3, map[a] = 5\n"
JsonParseTest: "b = 2\n"
MapKeyTest: ""
MapTest: "Result = 3\n"
StrReplaceTest: "R: A y B y C y D, O: A x B x C x D\n"
StringTest: ""
SubstrMatchTest: "true false true true\n"
TemplateString: "before str, num: 1337, true: true after\nbefore str, num: 1337, true: true after\nbefore str, num: 1337, true: true after\n"
TernaryTest: "true\n"
BigInteger: "5 -> 7, 24 -> 9980565866782199077\n"
ConstrInferBug: ""
ConstructorTest: "45\n"
CustomDecoder: "251\n250\n249\n|\n104\n101\n108\n108\n111\n0\n"
EnumAsFieldTest: "Value: EnumVal2\n"
EnumTest: "Item1: Item1, Item2: Item2, checks: SUCCESS SUCCESS\n"
FileTest: "example content\n"
FakeEnumTest: "EndToken\n"
GenericsTest: "3\n"
InheritanceTest: "BasePrinter: Base\nBasePrinter: Child\n42 == 42\n42 == 42\n"
MultiLangTest: "Hello!\nn = 4, arr[0] = 1\nmap['a'] = 2, arr[1] = 2\nTRUE-X\n65\n5! = 120\n"
NumberUnaryIssue: ""
OneLang: "token count:\n3\nhello(id)\n*(op)\n5(id)\n"
OneLang2: "Exception: Cannot read property 'matchFromIndex' of undefined\n"
StdoutTest: "eulav tnirp\n"
StrLenInferIssue: "5\n"
StructureTest1: ""
Test: "1\n2\n3\n4\n5\n6\n9\nzZx|xy\neulav tnirp\ntrue\n"
