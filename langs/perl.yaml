functions:
  stdlib.console.print:
    arguments:
      - name: str
    template: |
      print {{str}};
extension: pl
casing:
  class: pascal_case
  method: camel_case
templates:
  testGenerator: |
    package Program;
    my $c = new {{class}}();
    $c->{{method}}()

  main: |
    use strict;
    use warnings;

    {{for class in classes}}
      package {{class.name}}
      sub new
      {
        my $class = shift;
        my $self = {};
        bless $self, $class;
        return $self;
      }

      {{for method in class.methods}}
        sub {{method.name}} {
          {{genBody(method.body)}}
        }
      {{/for}}
    {{/for}}

  genBody:
    args:
      - name: body
    template: |
      {{for statement in body.statements}}
        {{statement}}
      {{/for}}

  genArgs:
    args:
      - name: method
    template: |-
      {{for param in method.parameters}}
        {{if param.idx != 0}},{{/if}}
        {{param.type}} {{param.name}}
      {{/for}}