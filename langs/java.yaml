functions:
  stdlib.console.print:
    arguments:
      - name: str
    template: |
      System.out.println({{str}});
extension: java
casing:
  class: pascal_case
  method: camel_case
primitiveTypes:
  void: void
  boolean: bool
  string: string
  int32: int
array: '{{type}}[]'
templates:
  testGenerator: |
    class {{fileName}} {
      static public void main(String args[]) {
        new {{class}}().{{method}}();
      }
    }

  main: |
    {{for inc in includes}}
      using {{inc}};
    {{/for}}

    {{for class in classes}}
      public class {{class.name}} {
        {{for method in class.methods}}
          {{method.visibility}} {{method.returnType}} {{method.name}}({{genArgs(method)}})
          {
            {{genBody(method.body)}}
          }
        {{/for}}
      }
    {{/for}}

  genBody:
    args:
      - name: body
    template: |
      {{for statement in body.statements}}
        {{statement}}
      {{/for}}

  genArgs:
    args:
      - name: method
    template: |-
      {{for param in method.parameters}}
        {{if param.idx != 0}},{{/if}}
        {{param.type}} {{param.name}}
      {{/for}}