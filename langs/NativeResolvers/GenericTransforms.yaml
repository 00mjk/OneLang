transforms:
  - description: "$object[$elementExpr] = $newValue -> $object.set($elementExpr, $newValue)"
    input:
      exprKind: Binary
      operator: =
      left:
        exprKind: ElementAccess
        object: $object
        elementExpr: $elementExpr
      right: $newValue
    output:
      exprKind: Call
      method:
        exprKind: PropertyAccess
        object: $object
        propertyName: set
      arguments: [$elementExpr, $newValue]
  - description: "unset $object[$elementExpr] -> $object.delete($elementExpr)"
    input:
      stmtType: Unset
      expression:
        exprKind: ElementAccess
        object: $object
        elementExpr: $elementExpr
    output:
      stmtType: ExpressionStatement
      expression:
        exprKind: Call
        method:
          exprKind: PropertyAccess
          object: $object
          propertyName: delete
        arguments: [$elementExpr]
  - description: "$object[$elementExpr] -> $object.get($elementExpr)"
    input:
      exprKind: ElementAccess
      object: $object
      elementExpr: $elementExpr
    output:
      exprKind: Call
      method:
        exprKind: PropertyAccess
        object: $object
        propertyName: get
      arguments: [$elementExpr]
  - description: "$className::new($arguments)"
    input:
      exprKind: Call
      method:
        exprKind: PropertyAccess
        object: $classIdentifier
        propertyName: new
      arguments: $arguments
    output:
      exprKind: New
      cls: $classIdentifier
      typeArguments: []
      arguments: $arguments
  - description: "(PHP) $var1 . $var2   =>   $var1 + $var2"
    input:
      exprKind: Binary
      operator: .
      left: $left
      right: $right
    output:
      exprKind: Binary
      operator: +
      left: $left
      right: $right
